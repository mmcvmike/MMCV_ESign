@{
    ViewBag.Title = "Form Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentUser = MMCV_Model.User.UserBO.Current.CurrentUser();
    var isAdmin = currentUser.RoleName != "Admin" ? "d-none" : "";
}

@section styles{
    <style>
        .modal-header-icon {
            margin-top: 5px;
            font-size: 20px;
            color: #33b837;
        }

        .container-fluid {
            width: 100%;
            padding-right: 0px;
            padding-left: 0px;
            margin-right: auto;
            margin-left: auto;
        }

        .drop {
            border: 3px dashed #DADFE3;
            background: white;
            border-radius: 3px;
            cursor: pointer;
            height: 85px;
        }

        .drop input {
            position: relative;
            top: -69px;
            width: 100%;
            cursor: pointer;
            background: red;
            opacity: 0;
            margin: auto;
            min-height: 87px;
        }

    </style>
}

<div class="p-3">
    <div class="card card-stats card-round mb-0">
        <div class="pt-3 pb-2">
            <div class="pl-3">
                <button class="btn btn-success btn-sm @isAdmin" data-toggle="modal" data-target="#addFormModal"><i class="fa fa-plus"></i>&nbsp; Add Form</button>
                @*<button class="btn btn-o btn-sm"><i class="fa fa-file-excel"></i>&nbsp; Export to excel</button>*@
            </div>
            <div class="p-3">
                <table id="fromDT" class="table table-bordered table-striped table-hover" style="width:100%">
                    <thead class="">
                        <tr>
                            <td><strong>FormID</strong></td>
                            <td><strong>Form Name</strong></td>
                            <td><strong>Dept</strong></td>
                            <td><strong>Description</strong></td>
                            <td><strong>Link</strong></td>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addFormModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <i class="fa fa-plus modal-header-icon"></i>
                <h3 class="modal-title" style="font-size: 1.3rem">
                    &nbsp;&nbsp;ADD FORM
                </h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            </div>
            <div class="" style="background-color: #28a745; height: 2px"></div>
            <div class="modal-body">
                <div>
                    <div class="col-md-12 col-sm-12 p-0 mb-2">
                        <strong>Form Name <span class="text-danger">*</span></strong>
                        <input type="text" class="form-control" id="txtAFormName" autocomplete="off" autofocus />
                    </div>
                    <div class="col-md-12 col-sm-12 p-0 mb-2">
                        <strong>Department</strong>
                        <div class="">
                            <select id="txtADept" class="form-control ddr-department">
                            </select>
                        </div>
                    </div>
                    <div class="col-md-12 col-sm-12 p-0 mb-2">
                        <strong>Description</strong>
                        <textarea class="form-control" id="txtADescription" autocomplete="off"></textarea>
                    </div>
                    <strong>Form Link</strong>
                    <div class="text-center drop">
                        <div>
                            <span class="text-success" style="font-size: 30px"><i class="fa fa-file-excel"></i></span>
                            <div></div>
                            <div class="">
                                <span class="text-danger">*</span>
                                Supported formats: .xlsx
                            </div>
                        </div>
                        <input id="form-upload-file" type="file" multiple="" accept=".xlsx" onchange="uploadFormFile()" autocomplete="off">
                    </div>
                    <div class="uploaded-file">

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" onclick="addForm()">Submit</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editDocumentTypeModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <i class="fa fa-plus modal-header-icon"></i>
                <h3 class="modal-title" style="font-size: 1.3rem">
                    &nbsp;&nbsp;FORM EDIT DOCUMENT TYPE
                </h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            </div>
            <div class="" style="background-color: #28a745; height: 2px"></div>
            <div class="modal-body">
                <div>
                    <input type="hidden" class="form-control" id="txtUDocTypeId" autocomplete="off" autofocus />
                    <div class="col-md-12 col-sm-12 p-0 mb-2">
                        <strong>Type Name <span class="text-danger">*</span></strong>
                        <input type="text" class="form-control" id="txtUTypeName" autocomplete="off" autofocus />
                    </div>
                    <div class="col-md-12 col-sm-12 p-0 mb-2">
                        <strong>Description</strong>
                        <textarea class="form-control" id="txtUDescription" autocomplete="off"></textarea>
                    </div>
                    <div>
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input ckbActive" name="ckbActive" id="ckbActive">
                            <label class="custom-control-label" for="ckbActive">Is Active</label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" onclick="updateDocType()">Submit</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>

        /*
         * Variables
         * */
        var baseUrl = "/FormManagement/";

        /*
         * Methods
         */

        $(document).ready(function (e) {
            $('.modal').on('shown.bs.modal', function () {
                $(this).find('[autofocus]').focus();
            });

            getDepartments(".ddr-department");

            getForms();
        })

        function getForms() {
            let action = baseUrl + 'GetForms';
            LoadingShow();
            GetDataAjax(action, function (response) {
                LoadingHide();
                if (response.rs) {
                    let data = response.data;
                    setTimeout(() => {
                        bindFormDataTable(data);
                    });
                }
                else {
                    toastr.error(response.msg, "Warning");
                }
            });
        }

        function bindFormDataTable(data) {
            $("#fromDT").DataTable({
                "destroy": true,
                "lengthChange": false,
                "pageLength": 10,
                "data": data,
                "columns": [
                    { "data": "FormID", "autoWidth": false },
                    { "data": "FormName", "autoWidth": false },
                    { "data": "DeptName", "autoWidth": false },
                    { "data": "Description", "autoWidth": false },
                    {
                        data: null,
                        render: function (data, type, row) {
                            let html = `
                                         <a href='javascript:void(0)' onclick='downloadForm(${row.FormID})' class='btn btn-light btn-sm'><i class='fa fa-file-excel text-success'></i>&nbsp;Download</a>

                                        `;
                            return html;
                        },
                    },
                ],
                "columnDefs": [
                    { "className": "text-center", "targets": "_all" }, //{ "className": "text-center", "targets": [0,1,2,3,4] },
                ],
                "language": {
                    "info": "Show _START_ - _END_ / _TOTAL_",
                    "paginate": {
                        'previous': '<span class="la flaticon-left-arrow"></span>',
                        'next': '<span class="la flaticon-right-arrow"></span>'
                    },
                },
                "scrollY": "530px",
                scrollX: true,
                scrollCollapse: true,
                //fixedColumns: {
                //    right: 1
                //}
            });
        }

        function addForm() {
            let txtName = $("#txtAFormName");
            let txtDesc = $("#txtADescription");
            let txtDept = $("#txtADept");

            if (!CheckNullOrEmpty(txtName, "Form name can not be empty or null"))
                return false;
            if (!CheckNullOrEmpty(txtDept, "Dept can not be empty or null"))
                return false;
            if (!CheckNullOrEmpty(txtName, "Document type name can not be empty or null"))
                return false;

            let action = baseUrl + 'AddForm';
            let datasend = {
                FormName: txtName.val(),
                DeptName: txtDept.val(),
                Description: txtDesc.val(),
                FormLink: formLink
            };
            LoadingShow();
            PostDataAjax(action, datasend, function (response) {
                LoadingHide();
                if (response.rs) {
                    toastr.success(response.msg, "Success");
                    $("#addFormModal").modal("hide");
                    getForms();
                }
                else {
                    toastr.error(response.msg, "Warning");
                }
            });
        }

        function openEdit(id) {
            // call server to get detail info
            let action = baseUrl + 'GetDocTypeById';
            let datasend = {
                id: id
            };
            LoadingShow();
            PostDataAjax(action, datasend, function (response) {
                LoadingHide();
                if (response.rs) {
                    $("#editDocumentTypeModal").modal("show");
                    let docType = response.data;
                    $("#txtUDocTypeId").val(docType.DocumentTypeID);
                    $("#txtUTypeName").val(docType.DocumentTypeName);
                    $("#txtUDescription").val(docType.Description);

                    if (docType.Active == 1) {
                        $("#ckbActive").prop("checked", true);
                    }
                    else {
                        $("#ckbActive").prop("checked", false);
                    }
                }
                else {
                    toastr.error(response.msg, "Warning");
                }
            });
        }

        function updateDocType() {
            let txtDocTypeId = $("#txtUDocTypeId").val();
            let txtName = $("#txtUTypeName");
            let txtDesc = $("#txtUDescription");
            let active = $("#ckbActive").prop("checked");

            if (!CheckNullOrEmpty(txtName, "Document type name can not be empty or null"))
                return false;

            let action = baseUrl + 'UpdateDocType';
            let datasend = {
                DocumentTypeID: txtDocTypeId,
                DocumentTypeName: txtName.val(),
                Description: txtDesc.val(),
                Active: active == true ? 1 : 0
            };
            LoadingShow();
            PostDataAjax(action, datasend, function (response) {
                LoadingHide();
                if (response.rs) {
                    toastr.success(response.msg, "Success");
                    $("#editDocumentTypeModal").modal("hide");
                    getDocType();
                }
                else {
                    toastr.error(response.msg, "Warning");
                }
            });
        }

        function formatActiveStatus(data) {
            let format = "";
            let unactive = "<span class='badge badge-danger'>UnActive</span>";
            let active = "<span class='badge badge-success'>Active</span>";
            format = data == 0 ? unactive : active;

            return format;
        }

        var formLink = "";
        function uploadFormFile() {
            if (window.FormData !== undefined) {
                var fileUpload = $("#form-upload-file").get(0);
                var files = fileUpload.files;
                var fileData = new FormData();
                for (var i = 0; i < files.length; i++) {
                    fileData.append("file" + i, files[i]);
                }
                LoadingShow();
                $.ajax({
                    url: baseUrl + 'UploadForm',
                    method: 'POST',
                    contentType: false,
                    processData: false,
                    data: fileData,
                    success: function (result) {
                        LoadingHide();
                        if (result.rs) {
                            let fileUploadResult = result.data;
                            uploadedFileObject = fileUploadResult;

                            let html = '';
                            let ele = fileUploadResult;
                            html = `
                                <div class="d-flex p-2 mb-1 item-file">
                                    <div class="icon_file align-self-center text-danger" style="font-size: 45px">
                                        <i class="fa fa-file-pdf"></i>
                                    </div>
                                    <div class="flex-grow-1 d-flex align-items-center w-100 pl-3">
                                        <div>
                                            <strong>${ele.fileName}</strong>
                                            <br />
                                            <span>${ele.fileSize} Kb</span>
                                        </div>
                                    </div>
                                    <div class="d-flex align-items-center action-file">
                                        <div class="dropdown">
                                            <span class="fa fa-ellipsis-v" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></span>
                                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="will-change: transform;">
                                                <a class="dropdown-item" onclick="renameFile({'fileName': '${ele.fileName}', 'fileSize': '${ele.fileSize}', 'fileLink': '${ele.fileLink}'})">Rename file</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            `;

                            $(".uploaded-file").html("").append(html);
                            formLink = ele.fileName;
                        }
                        else {
                            toastr.error(result.msg);
                        }
                    },
                    error: function (err) {
                        LoadingHide();
                        toastr.error(err.statusText);
                    }
                });
            } else {
                toastr.error("FormData is not supported.");
            }
        }

        function downloadForm(id) {
            LoadingShow();
            let action = baseUrl + 'DownloadForm';
            var datasend = {
                formId: id
            };
            PostDataAjax(action, datasend, function (response) {
                LoadingHide();
                if (response.rs) {
                    let data = response.data;
                    downloadBase64File(data.base64Data, data.fileName);
                }
                else {
                    LoadingHide();
                    toastr.error(response.msg, "Warning");
                }
            });
        }

        function getDepartments(selector) {
            let action = '/Common/GetDepartments';
            LoadingShow();
            GetDataAjax(action, function (response) {
                LoadingHide();
                if (response.rs) {
                    let data = response.data;
                    setTimeout(() => {
                        bindDataToDepartmentDropdown(data, selector);
                    }, 200);
                }
                else {
                    toastr.error(response.msg, "Warning");
                }
            });
        }

        function bindDataToDepartmentDropdown(data, selector) {
            let ddr = $(selector);
            let html = '<option value="" selected="" disabled="">Select item...</option>';
            for (var i = 0; i < data.length; i++) {
                let ele = data[i];
                html += `
                                <option value="${ele.DepartmentName}">${ele.DepartmentName}</option>
                            `;
            }

            ddr.html('').append(html);
        }

        function downloadBase64File(base64Data, fileName) {
            var byteCharacters = atob(base64Data);
            var byteNumbers = new Uint8Array(byteCharacters.length);

            for (var i = 0; i < byteCharacters.length; i++) {
                byteNumbers[i] = byteCharacters.charCodeAt(i);
            }

            var blob = new Blob([byteNumbers], { type: 'application/octet-stream' });

            var link = document.createElement('a');
            link.href = window.URL.createObjectURL(blob);
            link.download = fileName;

            // Append the link to the document body
            document.body.appendChild(link);

            // Trigger a click event on the link to start the download
            link.click();

            // Remove the link from the document
            document.body.removeChild(link);
        }

    </script>
}


