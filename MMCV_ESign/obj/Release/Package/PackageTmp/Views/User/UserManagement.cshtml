@{
    ViewBag.Title = "UserManagement";
}

@section styles{
    <style>
        .modal-header-icon {
            margin-top: 5px;
            font-size: 20px;
            color: #33b837;
        }
    </style>
}

<div class="p-3">
    <div class="card card-stats card-round mb-0">
        <div class="pt-3 pb-2">
            <button class="btn btn-success btn-sm ml-3" data-toggle="modal" data-target="#addUserModal"><i class="fa fa-plus"></i>&nbsp; Add user</button>
            <div class="btn-group">
                <button class="btn btn-o btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Excel operation &nbsp; <i class="la flaticon-down-arrow"></i>
                </button>
                <div class="dropdown-menu">
                    <a class="dropdown-item" href="#"><i class="fa fa-download"></i>&nbsp; Import from excel</a>
                    <a class="dropdown-item" href="#"><i class="fa fa-file-excel"></i>&nbsp; Export to excel</a>
                </div>
            </div>
            <div class="mt-2">
                <table id="userDT" class="table table-bordered table-striped table-hover" style="width:100%">
                    <thead class="">
                        <tr>
                            <td><strong>No</strong></td>
                            <td><strong>Username</strong></td>
                            <td><strong>Fullname</strong></td>
                            <td><strong>Email</strong></td>
                            <td><strong>EmpID</strong></td>
                            <td><strong>Department</strong></td>
                            <td><strong>Position</strong></td>
                            <td></td>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addUserModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <i class="fa fa-plus modal-header-icon"></i>
                <h3 class="modal-title" style="font-size: 1.3rem">
                    &nbsp;&nbsp;FORM ADD USER
                </h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            </div>
            <div class="" style="background-color: #28a745; height: 2px"></div>
            <div class="modal-body modal-scrollable">
                <ul class="nav nav-tabs" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" data-toggle="tab" href="#user-information" role="tab" aria-controls="" aria-selected="true"><strong>User information</strong></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-toggle="tab" href="#roles" role="tab" aria-controls="" aria-selected="false"><strong>Roles</strong></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-toggle="tab" href="#permission" role="tab" aria-controls="" aria-selected="false"><strong>Permission</strong></a>
                    </li>
                </ul>
                <div class="tab-content pt-2">
                    <div class="tab-pane fade show active" id="user-information" role="tabpanel" aria-labelledby="">
                        <div class="form-row col-md-12 p-0 m-0 mb-3">
                            <div class="col-md-6 col-sm-12 pl-0 pr-1">
                                <strong>Username <span class="text-danger">*</span></strong>
                                <input type="text" class="form-control" id="txtAUsername" autocomplete="off" autofocus />
                            </div>
                            <div class="col-md-6 col-sm-12 pl-1 pr-0">
                                <strong>Fullname <span class="text-danger">*</span></strong>
                                <input type="text" class="form-control" id="txtAFullname" autocomplete="off" />
                            </div>
                        </div>
                        <div class="form-row col-md-12 p-0 m-0 mb-3">
                            <div class="col-md-6 col-sm-12 pl-0 pr-1">
                                <strong>Email <span class="text-danger">*</span></strong>
                                <input type="email" class="form-control" id="txtAEmail" autocomplete="off" />
                            </div>
                            <div class="col-md-6 col-sm-12 pl-1 pr-0">
                                <strong>Employee ID <span class="text-danger">*</span></strong>
                                <input type="text" class="form-control" id="txtAEmployeeID" autocomplete="off" />
                            </div>
                        </div>
                        <div class="form-row col-md-12 p-0 m-0 mb-3">
                            <div class="col-md-6 col-sm-12 pl-0 pr-1">
                                <strong>Department</strong>
                                <div class="">
                                    <select id="txtADept" class="form-control ddr-department">
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6 col-sm-12 pl-1 pr-0">
                                <strong>Position</strong>
                                <div class="">
                                    <select id="txtAPosition" class="form-control ddr-position">
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="roles" role="tabpanel" aria-labelledby="">
                        <div class="d-flex">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input ckbRole" name="ckbRole" id="ckbAdmin" value="1">
                                <label class="custom-control-label" for="ckbAdmin">Admin</label>
                            </div>
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input ckbRole" name="ckbRole" checked id="ckbUser" value="2">
                                <label class="custom-control-label" for="ckbUser">User</label>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="permission" role="tabpanel" aria-labelledby="">
                        <div class="tree-container">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" onclick="addUser()">Submit</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="updateUserModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <i class="fa fa-edit modal-header-icon"></i>
                <h3 class="modal-title" style="font-size: 1.3rem">
                    &nbsp;&nbsp;FORM EDIT USER
                </h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            </div>
            <div class="" style="background-color: #28a745; height: 2px"></div>
            <div class="modal-body modal-scrollable">
                <ul class="nav nav-tabs" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" data-toggle="tab" href="#user-information-update" role="tab" aria-controls="" aria-selected="true"><strong>User information</strong></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-toggle="tab" href="#roles-update" role="tab" aria-controls="" aria-selected="false"><strong>Roles</strong></a>
                    </li>
                </ul>
                <div class="tab-content pt-2">
                    <div class="tab-pane fade show active" id="user-information-update" role="tabpanel" aria-labelledby="">
                        <input type="hidden" id="txtUUserID" value="" />
                        <div class="form-row col-md-12 p-0 m-0 mb-3">
                            <div class="col-md-6 col-sm-12 pl-0 pr-1">
                                <strong>Username <span class="text-danger">*</span></strong>
                                <input type="text" class="form-control" id="txtUUsername" autocomplete="off" disabled />
                            </div>
                            <div class="col-md-6 col-sm-12 pl-1 pr-0">
                                <strong>Fullname <span class="text-danger">*</span></strong>
                                <input type="text" class="form-control" id="txtUFullname" autocomplete="off" />
                            </div>
                        </div>
                        <div class="form-row col-md-12 p-0 m-0 mb-3">
                            <div class="col-md-6 col-sm-12 pl-0 pr-1">
                                <strong>Email <span class="text-danger">*</span></strong>
                                <input type="email" class="form-control" id="txtUEmail" autocomplete="off" />
                            </div>
                            <div class="col-md-6 col-sm-12 pl-1 pr-0">
                                <strong>Employee ID <span class="text-danger">*</span></strong>
                                <input type="text" class="form-control" id="txtUEmployeeID" autocomplete="off" />
                            </div>
                        </div>
                        <div class="form-row col-md-12 p-0 m-0 mb-3">
                            <div class="col-md-6 col-sm-12 pl-0 pr-1">
                                <strong>Department</strong>
                                <div class="">
                                    <select id="txtUDept" class="form-control ddr-department">
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6 col-sm-12 pl-1 pr-0">
                                <strong>Position</strong>
                                <div class="">
                                    <select id="txtUPosition" class="form-control ddr-position">
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="roles-update" role="tabpanel" aria-labelledby="">
                        <div class="d-flex">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input ckbRole-update" name="ckbRole-update" id="ckbAdmin-update" value="1">
                                <label class="custom-control-label" for="ckbAdmin-update">Admin</label>
                            </div>
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input ckbRole-update" name="ckbRole-update" id="ckbUser-update" value="2">
                                <label class="custom-control-label" for="ckbUser-update">User</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" onclick="updateUser()">Submit</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/libs/jstree/jstree.min.js"></script>
    <script>

        /*
         * Variables
         * */
        var baseUrl = "/User/";
        const User_Role = [
            {
                id: 1, value: "Admin"
            },
            {
                id: 2, value: "User"
            }
        ];

        /*
         * Methods
         */

        $(document).ready(function (e) {
            $('.modal').on('shown.bs.modal', function () {
                $(this).find('[autofocus]').focus();
            });

            getDepartments(".ddr-department");
            getPositions(".ddr-position");
            getUsers();
        })

        function getUsers() {
            let action = baseUrl + 'GetUsers';
            LoadingShow();
            GetDataAjax(action, function (response) {
                LoadingHide();
                if (response.rs) {
                    let data = response.data;
                    setTimeout(() => {
                        bindUserDataTable(data);
                    });
                }
                else {
                    toastr.error(response.msg, "Warning");
                }
            });
        }

        function bindUserDataTable(data) {
            $("#userDT").DataTable({
                "destroy": true,
                "lengthChange": false,
                "pageLength": 10,
                "data": data,
                "columns": [
                    { "data": "UserID", "name": "UserID", "autoWidth": false },
                    { "data": "Username", "name": "Username", "autoWidth": false },
                    { "data": "Fullname", "name": "Fullname", "autoWidth": false },
                    { "data": "Email", "name": "Email", "autoWidth": false },
                    { "data": "EmployeeID", "name": "EmployeeID", "autoWidth": false },
                    { "data": "DepartmentName", "name": "DepartmentName", "autoWidth": false },
                    { "data": "PositionName", "name": "PositionName", "autoWidth": false },
                    {
                        data: null,
                        render: function (data, type, row) {
                            let html = `
                                            <a href='javascript:void(0)' onclick='openEditUserModal(${row.UserID})' class='btn btn-light btn-sm'><i class='fa fa-edit text-primary'></i>&nbsp; Detail</a>
                                        `;
                            return html;
                        },
                    },
                ],
                "columnDefs": [
                    { "className": "text-center", "targets": "_all" }, //{ "className": "text-center", "targets": [0,1,2,3,4] },
                ],
                "language": {
                    "info": "Show _START_ - _END_ / _TOTAL_",
                    "paginate": {
                        'previous': '<span class="la flaticon-left-arrow"></span>',
                        'next': '<span class="la flaticon-right-arrow"></span>'
                    },
                },
                "scrollY": "530px",
                scrollX: true,
                scrollCollapse: true,
                //fixedColumns: {
                //    right: 1
                //}
            });
        }

        function addUser() {
            let username = $("#txtAUsername");
            let fullname = $("#txtAFullname");
            let employeeId = $("#txtAEmployeeID");
            let email = $("#txtAEmail");
            let dept = $("#txtADept");
            let position = $("#txtAPosition");
            let role = $('input[name=ckbRole]:checked').val();

            if (!CheckNullOrEmpty(username, "Username can not be empty or null"))
                return false;
            if (!CheckNullOrEmpty(fullname, "Fullname can not be empty or null"))
                return false;
            if (!CheckNullOrEmpty(email, "Email can not be empty or null"))
                return false;
            if (!validation.isEmailAddress(email.val())) {
                toastr.error("Email is wrong format");
                return false;
            }
            if (!CheckNullOrEmpty(employeeId, "EmployeeID can not be empty or null"))
                return false;

            let action = baseUrl + 'AddUser';
            let datasend = {
                Username: username.val(),
                Fullname: fullname.val(),
                Email: email.val(),
                EmployeeID: employeeId.val(),
                DepartmentID: dept.val(),
                PositionID: position.val(),
                RoleID: role
            };
            LoadingShow();
            PostDataAjax(action, datasend, function (response) {
                LoadingHide();
                if (response.rs) {
                    toastr.success(response.msg, "Success");
                    $("#addUserModal").modal("hide");
                    getUsers();
                }
                else {
                    toastr.error(response.msg, "Warning");
                }
            });
        }

        function updateUser() {
            let userid = $("#txtUUserID").val();
            let fullname = $("#txtUFullname");
            let employeeId = $("#txtUEmployeeID");
            let email = $("#txtUEmail");
            let dept = $("#txtUDept");
            let position = $("#txtUPosition");
            let role = $('input[name=ckbRole-update]:checked').val();

            if (!CheckNullOrEmpty(fullname, "Fullname can not be empty or null"))
                return false;
            if (!CheckNullOrEmpty(email, "Email can not be empty or null"))
                return false;
            if (!validation.isEmailAddress(email.val())) {
                toastr.errpr("Email is wrong format");
                return false;
            }
            if (!CheckNullOrEmpty(employeeId, "EmployeeID can not be empty or null"))
                return false;

            let action = baseUrl + 'UpdateUser';
            let datasend = {
                UserID: userid,
                Fullname: fullname.val(),
                Email: email.val(),
                EmployeeID: employeeId.val(),
                DepartmentID: dept.val(),
                PositionID: position.val(),
                RoleID: role
            };
            LoadingShow();
            PostDataAjax(action, datasend, function (response) {
                LoadingHide();
                if (response.rs) {
                    toastr.success(response.msg, "Success");
                    $("#updateUserModal").modal("hide");
                    getUsers();
                }
                else {
                    toastr.error(response.msg, "Warning");
                }
            });
        }

        function getDepartments(selector) {
            let action = '/Common/GetDepartments';
            LoadingShow();
            GetDataAjax(action, function (response) {
                LoadingHide();
                if (response.rs) {
                    let data = response.data;
                    setTimeout(() => {
                        bindDataToDepartmentDropdown(data, selector);
                    }, 200);
                }
                else {
                    toastr.error(response.msg, "Warning");
                }
            });
        }

        function getPositions(selector) {
            let action = '/Common/GetPositions';
            LoadingShow();
            GetDataAjax(action, function (response) {
                LoadingHide();
                if (response.rs) {
                    let data = response.data;
                    setTimeout(() => {
                        bindDataToPositionDropdown(data, selector);
                    }, 200);
                }
                else {
                    toastr.error(response.msg, "Warning");
                }
            });
        }

        function bindDataToDepartmentDropdown(data, selector) {
            let ddr = $(selector);
            let html = '<option value="" selected="" disabled="">Select item...</option>';
            for (var i = 0; i < data.length; i++) {
                let ele = data[i];
                html += `
                                <option value="${ele.DepartmentID}">${ele.DepartmentName}</option>
                            `;
            }

            ddr.html('').append(html);
        }

        function bindDataToPositionDropdown(data, selector) {
            let ddr = $(selector);
            let html = '<option value="" selected="" disabled="">Select item...</option>';
            for (var i = 0; i < data.length; i++) {
                let ele = data[i];
                html += `
                                <option value="${ele.PositionID}">${ele.PositionName}</option>
                            `;
            }

            ddr.html('').append(html);
        }

        function openEditUserModal(id) {
            // call server to get detail info
            let action = baseUrl + 'GetUserById';
            let datasend = {
                userId: id
            };
            LoadingShow();
            PostDataAjax(action, datasend, function (response) {
                LoadingHide();
                if (response.rs) {
                    $("#updateUserModal").modal("show");
                    let user = response.data;
                    $("#txtUUserID").val(user.UserID);
                    $("#txtUUsername").val(user.Username);
                    $("#txtUEmail").val(user.Email);
                    $("#txtUEmployeeID").val(user.EmployeeID);
                    $("#txtUFullname").val(user.Fullname);
                    $("#txtUDept").val(user.DepartmentID);
                    $("#txtUPosition").val(user.PositionID);

                    $('.ckbRole-update').each((index, ele) => {
                        if (ele.value == user.RoleID) {
                            $(ele).prop('checked', true); 
                        }
                        else {
                            $(ele).prop('checked', false); 
                        }
                    })
                }
                else {
                    toastr.error(response.msg, "Warning");
                }
            });
        }

    </script>

    <script>
        let data = [
            {
                "id": "0",
                "text": "node-0",
                "children": [
                    {
                        "id": "0-0",
                        "text": "node-0-0",
                        "children": [
                            {
                                "id": "0-0-0",
                                "text": "node-0-0-0"
                            },
                            {
                                "id": "0-0-1",
                                "text": "node-0-0-1"
                            },
                            {
                                "id": "0-0-2",
                                "text": "node-0-0-2"
                            }
                        ]
                    },
                    {
                        "id": "0-1",
                        "text": "node-0-1",
                        "children": [
                            {
                                "id": "0-1-0",
                                "text": "node-0-1-0"
                            },
                            {
                                "id": "0-1-1",
                                "text": "node-0-1-1"
                            },
                            {
                                "id": "0-1-2",
                                "text": "node-0-1-2"
                            }
                        ]
                    },
                    {
                        "id": "0-2",
                        "text": "node-0-2",
                        "children": [
                            {
                                "id": "0-2-0",
                                "text": "node-0-2-0"
                            },
                            {
                                "id": "0-2-1",
                                "text": "node-0-2-1"
                            },
                            {
                                "id": "0-2-2",
                                "text": "node-0-2-2"
                            }
                        ]
                    }
                ]
            },

            {
                "id": "1",
                "text": "node-1",
                "children": [
                    {
                        "id": "1-0",
                        "text": "node-1-0",
                        "children": [
                            {
                                "id": "1-0-0",
                                "text": "node-1-0-0"
                            },
                            {
                                "id": "1-0-1",
                                "text": "node-1-0-1"
                            },
                            {
                                "id": "1-0-2",
                                "text": "node-1-0-2"
                            }
                        ]
                    },
                    {
                        "id": "1-1-1",
                        "text": "node-1-1",
                        "children": [
                            {
                                "id": "1-1-0",
                                "text": "node-1-1-0"
                            },
                            {
                                "id": "1-1-1",
                                "text": "node-1-1-1"
                            },
                            {
                                "id": "1-1-2",
                                "text": "node-1-1-2"
                            }
                        ]
                    },
                    {
                        "id": "1-2",
                        "text": "node-1-2",
                        "children": [
                            {
                                "id": "1-2-0",
                                "text": "node-1-2-0"
                            },
                            {
                                "id": "1-2-1",
                                "text": "node-1-2-1"
                            },
                            {
                                "id": "1-2-2",
                                "text": "node-1-2-2"
                            }
                        ]
                    }
                ]
            },

            {
                "id": "2",
                "text": "node-2",
                "children": [
                    {
                        "id": "2-0",
                        "text": "node-2-0",
                        "children": [
                            {
                                "id": "2-0-0",
                                "text": "node-2-0-0"
                            },
                            {
                                "id": "2-0-1",
                                "text": "node-2-0-1"
                            },
                            {
                                "id": "2-0-2",
                                "text": "node-2-0-2"
                            }
                        ]
                    },
                    {
                        "id": "2-1",
                        "text": "node-2-1",
                        "children": [
                            {
                                "id": "2-1-0",
                                "text": "node-2-1-0"
                            },
                            {
                                "id": "2-1-1",
                                "text": "node-2-1-1"
                            },
                            {
                                "id": "2-1-2",
                                "text": "node-2-1-2"
                            }
                        ]
                    },
                    {
                        "id": "2-2",
                        "text": "node-2-2",
                        "children": [
                            {
                                "id": "2-2-0",
                                "text": "node-2-2-0"
                            },
                            {
                                "id": "2-2-1",
                                "text": "node-2-2-1"
                            },
                            {
                                "id": "2-2-2",
                                "text": "node-2-2-2"
                            }
                        ]
                    }
                ]
            }
        ]

        let tree = new Tree('.tree-container', {
            data: [{ id: '-1', text: 'Roles', children: data }],
            closeDepth: 3,
            loaded: function () {
                this.values = ['0-0-0', '0-1-1'];
                console.log(this.selectedNodes);
                console.log(this.values);
                this.disables = ['0-0-0', '0-0-1', '0-0-2']
            },
            onChange: function () {
                console.log(this.values);
            }
        })

        $(".ckbRole").change(function () {
            //Getting status before unchecking all
            var status = $(this).prop("checked");

            $(".ckbRole").prop('checked', false);
            $(this).prop('checked', true);

            //false means checkbox was checked and became unchecked on change event, so let it stay unchecked
            if (status === false) {
                $(this).prop('checked', false);
            }
        });

        $(".ckbRole-update").change(function () {
            //Getting status before unchecking all
            var status = $(this).prop("checked");

            $(".ckbRole-update").prop('checked', false);
            $(this).prop('checked', true);

            //false means checkbox was checked and became unchecked on change event, so let it stay unchecked
            if (status === false) {
                $(this).prop('checked', false);
            }
        });

    </script>
}

